##########################################
#
# ___  ____ ____ ____ _  _ _ ____ ____ .
# |  \ |__| |___ |    |__| | |__/ [__  '
# |__/ |  | |___ |___ |  | | |  \ ___]
#
#         ___  ____ ___ ____
#         |  \ |  |  |  [__
#         |__/ |__|  |  ___]
#
#
# This file is a part of Daechir Dots.
# It adheres to the GNU GPL license.
#
# https://github.com/daechir/daechir-dots
#
# Â© 2020-2021
#
#
##########################################


# .xutility
# Manage various utility items using only bash functions

# Add xdl (x download) function
xdl() {
  local xenos_dtype=$1
  local xenos_arg1=$2
  local xenos_arg2=$3

  case $xenos_dtype in
    a | auto)
      xenos_dtype="youtube-dl -f bestvideo+bestaudio --force-ipv4 --external-downloader axel --external-downloader-args --ipv4"
      ;;
    4 | mp4)
      xenos_dtype="youtube-dl -f bestvideo+bestaudio --merge-output-format mp4 --force-ipv4 --external-downloader axel --external-downloader-args --ipv4"
      ;;
    3 | mp3)
      xenos_dtype="youtube-dl -x --audio-format mp3 --audio-quality 320K --force-ipv4 --external-downloader axel --external-downloader-args --ipv4"
      ;;
    3p | mp3p)
      xenos_dtype="youtube-dl -x --audio-format mp3 --audio-quality 320K --yes-playlist --force-ipv4 --external-downloader axel --external-downloader-args --ipv4"
      ;;
    ax | axel)
      xenos_dtype="axel --ipv4"
      ;;
  esac

  if [[ -n "${xenos_arg2}" ]]; then
    xenos_dtype="${xenos_dtype} ${xenos_arg1} ${xenos_arg2}"
  else
    xenos_dtype="${xenos_dtype} ${xenos_arg1}"
  fi

  $xenos_dtype
}

# Add xgpg function
xgpg() {
  local xenos_gtype=$1
  local xenos_arg1=$2

  case $xenos_gtype in
    tf | twofish)
      gpg --symmetric --cipher-algo TWOFISH "${xenos_arg1}"
      ;;
    aes | aes256)
      gpg --symmetric --cipher-algo AES256 "${xenos_arg1}"
      ;;
    d | decrypt)
      gpg -d "${xenos_arg1}"
      ;;
  esac
}

# Add xiso function
xiso() {
  local xenos_itype=$1
  local xenos_arg1=$2
  local xenos_arg2=$3

  case $xenos_itype in
    sha256)
      sha256sum "${xenos_arg1}"
      ;;
    sha1)
      sha1sum "${xenos_arg1}"
      ;;
    md5)
      md5sum "${xenos_arg1}"
      ;;
    dd)
      xel dd bs=4M if="${xenos_arg1}" of=/dev/"${xenos_arg2}"
      ;;
  esac
}

# Add xleave function
xleave() {
  xel journalctl --rotate --vacuum-time=1s &> /dev/null
  bleachbit --preset --clean &> /dev/null
  find "$HOME" -type d -exec chmod 700 {} \; &> /dev/null
  find "$HOME" -type f -exec chmod 600 {} \; &> /dev/null
  systemctl poweroff
}

# Add xpw (x password) function
xpw() {
  local xenos_ptype=$1
  local xenos_arg1=$2
  local xenos_arg2=$3

  case $xenos_ptype in
    me | maxentropy)
      pwgen -cnys "${xenos_arg1}" "${xenos_arg2}"
      ;;
    na | noambiguous)
      pwgen -cnysB "${xenos_arg1}" "${xenos_arg2}"
      ;;
    lan | lettersandnumbers)
      pwgen -cns "${xenos_arg1}" "${xenos_arg2}"
      ;;
  esac
}

# Add xsys (x system) function
xsys() {
  local xenos_stype=$1
  local xenos_arg1=$2

  case $xenos_stype in
    err)
      journalctl -b -p err
      ;;
    warn)
      journalctl -b -p warning
      ;;
    status)
      systemctl status
      ;;
    reload)
      xel systemctl daemon-reload
      ;;
    restart)
      xel systemctl restart "${xenos_arg1}"
      ;;
    unit-files)
      systemctl list-unit-files | grep -i "${xenos_arg1}"
      ;;
    sysctl)
      sysctl -a | grep -i "${xenos_arg1}"
      ;;
    verify)
      local xenos_vtype=(
        "/etc/modprobe.d/"
        "/etc/modules-load.d/"
        "/etc/sysctl.d/"
        "/usr/lib/modprobe.d/"
        "/usr/lib/modules-load.d/"
        "/usr/lib/sysctl.d/"
      )

      for vitem in "${xenos_vtype[@]}"
      do
        echo -e "\n${vitem}\n"
        ll "${vitem}"
      done
      ;;
  esac
}

